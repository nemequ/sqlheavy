NULL =

CLEANFILES =

lib_LTLIBRARIES = \
	libsqlheavy@SQLHEAVY_API_VERSION@.la \
	$(NULL)

libsqlheavy@SQLHEAVY_API_VERSION@_la_SOURCES = \
	sqlheavy-backup.vala \
	sqlheavy-common-function.vala \
	sqlheavy-cursor.vala \
	sqlheavy-database.vala \
	sqlheavy-enums.vala \
	sqlheavy-error.vala \
	sqlheavy-mutable-record.vala \
	sqlheavy-profiling-database.vala \
	sqlheavy-query.vala \
	sqlheavy-queryable.vala \
	sqlheavy-query-result.vala \
	sqlheavy-record.vala \
	sqlheavy-record-set.vala \
	sqlheavy-resources.c \
	sqlheavy-row.vala \
	sqlheavy-table.vala \
	sqlheavy-table-cursor.vala \
	sqlheavy-transaction.vala \
	sqlheavy-user-functions.vala \
	sqlheavy-value.vala \
	sqlheavy-version.vala \
	sqlheavy-versioned-database.vala \
	$(NULL)

# If introspection is enabled we need to ask valac to generate a GIR
# for us.

if HAVE_INTROSPECTION
GIR_SQLHEAVY_VALAFLAGS = \
	--gir SQLHeavy-@SQLHEAVY_API_VERSION@.gir \
	$(NULL)
else
GIR_SQLHEAVY_VALAFLAGS =
endif

# For the most part this is pretty straightforward. If you don't
# understand something you can look at valac --help, or the valac man
# page.

libsqlheavy@SQLHEAVY_API_VERSION@_la_VALAFLAGS = \
	$(GIR_SQLHEAVY_VALAFLAGS) \
	--library sqlheavy-@SQLHEAVY_API_VERSION@ \
	--target-glib 2.32 \
	--vapi sqlheavy-@SQLHEAVY_API_VERSION@.vapi \
	-H SQLHeavy.h \
	--use-header \
	--internal-header sqlheavy-@SQLHEAVY_API_VERSION@-internal.h \
	--vapidir $(top_srcdir)/sqlheavy \
	--pkg config \
	--pkg gio-2.0 \
	--pkg glib-2.0 \
	--pkg gmodule-2.0 \
	--pkg gobject-2.0 \
	--pkg sqlite3 \
	$(NULL)

libsqlheavy@SQLHEAVY_API_VERSION@_la_CFLAGS = \
	-w \
	-include $(builddir)/"config.h" \
	$(GIO_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(GMODULE_CFLAGS) \
	$(SQLITE3_CFLAGS) \
	$(NULL)

libsqlheavy@SQLHEAVY_API_VERSION@_la_LDFLAGS = \
	$(GIO_LIBS) \
	$(GLIB_LIBS) \
	$(GMODULE_LIBS) \
	$(SQLITE3_LIBS) \
	$(NULL)

sqlheavyincludedir = $(includedir)/sqlheavy/sqlheavy-$(SQLHEAVY_API_VERSION)
sqlheavyinclude_HEADERS = \
	SQLHeavy.h \
	$(NULL)

vapidir = $(datadir)/vala/vapi
vapi_DATA = \
	sqlheavy-@SQLHEAVY_API_VERSION@.vapi \
	sqlheavy-@SQLHEAVY_API_VERSION@.deps \
	$(NULL)

sqlheavy-resources.c sqlheavy-resources.h: resources/resources.xml
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target $@ --sourcedir $(srcdir)/resources --generate $^

BUILT_SOURCES = \
	sqlheavy-resources.c \
	sqlheavy-resources.h \
	$(NULL)

-include $(INTROSPECTION_MAKEFILE)
if HAVE_INTROSPECTION

# Install the GIR and typelib files to the correct
# location. $(INTROSPECTION_GIRDIR) is filled in by the macro in
# introspection.m4.

girdir = $(INTROSPECTION_GIRDIR)
gir_DATA = SQLHeavy-$(SQLHEAVY_API_VERSION).gir

# Compile all the GIR files listed above (only one in this case) to
# typelibs and install them to the correct location. Again, the
# installation directory is filled in by the macro in
# introspection.m4.

typelibsdir = $(INTROSPECTION_TYPELIBDIR)
typelibs_DATA = $(gir_DATA:.gir=.typelib)

# Compile the GIR to a typelib. The only really interesting thing here
# is the --shared-library argument. Vala doesn't write the shared
# library information to the GIR since it doesn't know what it will
# be, whereas GIRs generated by g-ir-scanner do have this information
# included.

%.typelib: %.gir $(INTROSPECTION_COMPILER)
	$(AM_V_GEN) LD_LIBRARY_PATH=.libs${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH} \
	$(INTROSPECTION_COMPILER) \
		--includedir=$(srcdir) \
		--includedir=. \
		--shared-library=sqlheavy@SQLHEAVY_API_VERSION@ \
		$(INTROSPECTION_COMPILER_OPTS) $< -o $(@F)

CLEANFILES += \
	$(typelibs_DATA) \
	$(NULL)

endif # HAVE_INTROSPECTION

MAINTAINERCLEANFILES = \
	SQLHeavy.h \
	SQLHeavy-@SQLHEAVY_API_VERSION@.gir \
	sqlheavy-@SQLHEAVY_API_VERSION@.vapi \
	$(NULL)

EXTRA_DIST = \
	config.vapi \
	SQLHeavy.h \
	SQLHeavy-@SQLHEAVY_API_VERSION@.gir \
	sqlheavy-@SQLHEAVY_API_VERSION@.vapi \
	sqlheavy-@SQLHEAVY_API_VERSION@.deps \
	sqlheavy-@SQLHEAVY_API_VERSION@-internal.h \
	libsqlheavy@SQLHEAVY_API_VERSION@_la_vala.stamp \
	resources \
	$(NULL)
